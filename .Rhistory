x4=ifelse(nbT>3,x4,NA),
x5=ifelse(nbT>4,x5,NA),
y3=ifelse(nbT>2,y3,NA),
y4=ifelse(nbT>3,y4,NA),
y5=ifelse(nbT>4,y5,NA))
grid_dist=
merge(grid_index,trees_positions,by = "Design",all.x=F)%>%
mutate(dist_tree_1= sqrt((x - x1)^2 + (y - y1)^2),
dist_tree_2= sqrt((x - x2)^2 + (y - y2)^2),
dist_tree_3= sqrt((x - x3)^2 + (y - y3)^2),
dist_tree_4= sqrt((x - x4)^2 + (y - y4)^2),
dist_tree_5= sqrt((x - x5)^2 + (y - y5)^2),
dist_tree_x1= abs(x - x1),
dist_tree_x2= abs(x - x2),
dist_tree_x3= abs(x - x3),
dist_tree_x4= abs(x - x4),
dist_tree_x5= abs(x - x5),
x_tree_1= x1, x_tree_2= x2,
x_tree_3= x3, x_tree_4= x4,
x_tree_5= x5,
y_tree_1=y1,y_tree_2=y2,
y_tree_3=y3,y_tree_4=y4,y_tree_5=y5)%>%
mutate(dist_tree= pmin(dist_tree_1,dist_tree_2,dist_tree_3,dist_tree_4,dist_tree_5,na.rm = T),
dist_tree_x= pmin(dist_tree_x1,dist_tree_x2,dist_tree_x3,dist_tree_x4,dist_tree_5,na.rm = T))
plane_df=
nodes%>%
filter(type=="Cobblestone")%>%
mutate(Design=design_name)%>%
mutate(component_id= component_id-1)%>% # id 1 was the scene
# dplyr::left_join(Area_plots, by= "Design")%>%
dplyr::left_join(meteo%>%select(date,step), by= c("step_number"= "step"))%>%
dplyr::left_join(grid_dist, by= c("Design","component_id"= "id"))
plane_df$Design= as.factor(plane_df$Design)
plane_df=plane_df%>%
filter(Design==unique(grid_dist$Design))
plane_df_step=
plane_df%>%
dplyr::mutate(Date= date,
irradiation= Ra_PAR_q*area*step_duration,
irradiance= Ra_PAR_q)
grid_df_day=
plane_df_step%>%
filter(Design %in% unique(plane_df_step$Design))%>%
group_by(Design,component_id)%>%
summarise(Date= mean(.data$date),
Intercepted= sum(Ra_PAR_q/area*10**-6),
# absEnergy_withScattering_PAR J grid-1
# Global intercepted radiation in J grid-1 d-1
# Area_plot= mean(.data$Area_plot),
dist_tree= mean(dist_tree),
dist_tree_x= mean(dist_tree_x),
# density= unique(density),
x= unique(x),
y=unique(y),
x_tree_1= unique(x_tree_1),
x_tree_2= unique(x_tree_2),
x_tree_3= unique(x_tree_3),
x_tree_4= unique(x_tree_4),
x_tree_5= unique(x_tree_5),
y_tree_1= unique(y_tree_1),
y_tree_2= unique(y_tree_2),
y_tree_3= unique(y_tree_3),
y_tree_4= unique(y_tree_4),
y_tree_5= unique(y_tree_5))%>%
ungroup()
reps=NULL
if (designType %in% c('square','quincunx')){
d_intercrop=0}
repRows=ceiling(lim/(d_inter+d_intercrop))
repCol=ceiling(lim/d_intra)
for (r_x in 0:repRows){
for (r_y in 0:repCol){
# print(paste('r_x:',r_x,' r_y:',r_y))
subRep=grid_df_day%>%
group_by(Design)%>%
mutate(xmax=max(x,na.rm=T),
ymax=max(y,na.rm=T),
x=x+r_x*xmax,
y=y+r_y*ymax,
x_tree_1=x_tree_1+r_x*xmax,
x_tree_2=x_tree_2+r_x*xmax,
x_tree_3=x_tree_3+r_x*xmax,
x_tree_4=x_tree_4+r_x*xmax,
x_tree_5=x_tree_5+r_x*xmax,
y_tree_1=y_tree_1+r_y*ymax,
y_tree_2=y_tree_2+r_y*ymax,
y_tree_3=y_tree_3+r_y*ymax,
y_tree_4=y_tree_4+r_y*ymax,
y_tree_5=y_tree_5+r_y*ymax
)%>%
ungroup()%>%
select(colnames(grid_df_day))
reps=rbind(reps,subRep)
}
}
# lims=as.numeric(reps%>%
#                   group_by(Design)%>%
#                   summarize(x=max(x,na.rm=T),
#                             y=max(y,na.rm=T))%>%
#                   ungroup()%>%
#                   summarize(x=min(x),y=min(y)))
# min=min(c(lims,3*max(d_inter,d_intra)))
if (designType %in% c('quincunx','square','quincunx2','square2')){
grid_fin=reps%>%
filter(x<=lim & y<=lim)%>%
# filter(x_tree_1<=lim & y_tree_1<=lim)%>%
# filter(x_tree_2<=lim & y_tree_2<=lim)%>%
mutate(Intercepted_rel=Intercepted/PARinc*100)
}
if (designType %in% c('quincunx3')){
grid_fin=reps%>%
filter(x<=lim & y<=lim)%>%
filter(x_tree_1<=lim & y_tree_1<=lim)%>%
filter(x_tree_2<=lim & y_tree_2<=lim)%>%
filter(x_tree_3<=lim & y_tree_3<=lim)%>%
mutate(Intercepted_rel=Intercepted/PARinc*100)
}
if (designType %in% c('quincunx4')){
grid_fin=reps%>%
filter(x<=lim & y<=lim)%>%
filter(x_tree_1<=lim & y_tree_1<=lim)%>%
filter(x_tree_2<=lim & y_tree_2<=lim)%>%
filter(x_tree_3<=lim & y_tree_3<=lim)%>%
filter(x_tree_4<=lim & y_tree_4<=lim)%>%
mutate(Intercepted_rel=Intercepted/PARinc*100)
}
if (designType %in% c('quincunx5')){
grid_fin=reps%>%
filter(x<=lim & y<=lim)%>%
filter(x_tree_1<=lim & y_tree_1<=lim)%>%
filter(x_tree_2<=lim & y_tree_2<=lim)%>%
filter(x_tree_3<=lim & y_tree_3<=lim)%>%
filter(x_tree_4<=lim & y_tree_4<=lim)%>%
filter(x_tree_5<=lim & y_tree_5<=lim)%>%
mutate(Intercepted_rel=Intercepted/PARinc*100)
}
### save the map
data.table::fwrite(x = grid_fin,file =fileMap)
}
if (fileMap %in% existing_files){
print(paste('loading existing file',fileMap))
grid_fin=data.table::fread(file =fileMap,dec = '.',sep = ',')
}
### graphic
grid= data.table::fread(paste0(path_designs,design_name,'.csv'))
density=floor(nrow(grid)*10000/(unique(grid$xmax)*unique(grid$ymax)))
if(orientation=='NS'){
if (designType %in% c('quincunx','quincunx2','square','square2')){
plot=grid_fin%>%
mutate(Intercepted_rel=ifelse(Intercepted_rel>100,100,Intercepted_rel))%>%
ggplot(aes(x=x, y=y,fill=Intercepted_rel,col=Intercepted_rel))+
geom_tile()+
geom_point(aes(x=x_tree_1,y=y_tree_1),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_2,y=y_tree_2),pch=8,col='forestgreen',size=3)+
ylim(low= 0, high= lim)+
xlim(low= 0, high=lim)+
labs(x = 'Intra row distance (m)', y = 'Inter row distance (m)',fill= expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)')) +
scale_fill_viridis(option = 'plasma',limits = c(0, 100))+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
coord_equal()+
myTheme+
theme(legend.position = 'bottom')
}
if (designType %in% c('quincunx3')){
plot=grid_fin%>%
mutate(Intercepted_rel=ifelse(Intercepted_rel>100,100,Intercepted_rel))%>%
ggplot(aes(x=x, y=y,fill=Intercepted_rel,col=Intercepted_rel))+
geom_tile()+
geom_point(aes(x=x_tree_1,y=y_tree_1),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_2,y=y_tree_2),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_3,y=y_tree_3),pch=8,col='forestgreen',size=3)+
ylim(low= 0, high= lim)+
xlim(low= 0, high=lim)+
labs(x = 'Intra row distance (m)', y = 'Inter row distance (m)',fill= expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)')) +
scale_fill_viridis(option = 'plasma',limits = c(0, 100))+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
coord_equal()+
myTheme+
theme(legend.position = 'bottom')
}
if (designType %in% c('quincunx4')){
plot=grid_fin%>%
mutate(Intercepted_rel=ifelse(Intercepted_rel>100,100,Intercepted_rel))%>%
ggplot(aes(x=x, y=y,fill=Intercepted_rel,col=Intercepted_rel))+
geom_tile()+
geom_point(aes(x=x_tree_1,y=y_tree_1),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_2,y=y_tree_2),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_3,y=y_tree_3),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_4,y=y_tree_4),pch=8,col='forestgreen',size=3)+
ylim(low= 0, high= lim)+
xlim(low= 0, high=lim)+
labs(x = 'Intra row distance (m)', y = 'Inter row distance (m)',fill= expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)')) +
scale_fill_viridis(option = 'plasma',limits = c(0, 100))+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
coord_equal()+
myTheme+
theme(legend.position = 'bottom')
}
if (designType %in% c('quincunx5')){
plot=grid_fin%>%
mutate(Intercepted_rel=ifelse(Intercepted_rel>100,100,Intercepted_rel))%>%
ggplot(aes(x=x, y=y,fill=Intercepted_rel,col=Intercepted_rel))+
geom_tile()+
geom_point(aes(x=x_tree_1,y=y_tree_1),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_2,y=y_tree_2),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_3,y=y_tree_3),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_4,y=y_tree_4),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=x_tree_5,y=y_tree_5),pch=8,col='forestgreen',size=3)+
ylim(low= 0, high= lim)+
xlim(low= 0, high=lim)+
labs(x = 'Intra row distance (m)', y = 'Inter row distance (m)',fill= expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)')) +
scale_fill_viridis(option = 'plasma',limits = c(0, 100))+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
coord_equal()+
myTheme+
theme(legend.position = 'bottom')
}
}
if(orientation=='EW'){
if (designType %in% c('quincunx','quincunx2','square','square2')){
plot=grid_fin%>%
mutate(Intercepted_rel=ifelse(Intercepted_rel>100,100,Intercepted_rel))%>%
ggplot(aes(x=y, y=x,fill=Intercepted_rel,col=Intercepted_rel))+
geom_tile()+
geom_point(aes(x=y_tree_1,y=x_tree_1),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_2,y=x_tree_2),pch=8,col='forestgreen',size=3)+
ylim(low= 0, high= lim)+
xlim(low= 0, high=lim)+
labs(x = 'Intra row distance (m)', y = 'Inter row distance (m)',fill= expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)')) +
scale_fill_viridis(option = 'plasma',limits = c(0, 100))+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
ggtitle(paste(design_name,' -',orientation),
paste(paramFileName,' density:',density,'palms ha-1'))+
coord_equal()+
myTheme
}
if (designType %in% c('quincunx3')){
plot=grid_fin%>%
mutate(Intercepted_rel=ifelse(Intercepted_rel>100,100,Intercepted_rel))%>%
ggplot(aes(x=y, y=x,fill=Intercepted_rel,col=Intercepted_rel))+
geom_tile()+
geom_point(aes(x=y_tree_1,y=x_tree_1),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_2,y=x_tree_2),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_3,y=x_tree_3),pch=8,col='forestgreen',size=3)+
ylim(low= 0, high= lim)+
xlim(low= 0, high=lim)+
labs(x = 'Intra row distance (m)', y = 'Inter row distance (m)',fill= expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)')) +
scale_fill_viridis(option = 'plasma',limits = c(0, 100))+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
ggtitle(paste(design_name,' -',orientation),
paste(paramFileName,' density:',density,'palms ha-1'))+
coord_equal()+
myTheme
}
if (designType %in% c('quincunx4')){
plot=grid_fin%>%
mutate(Intercepted_rel=ifelse(Intercepted_rel>100,100,Intercepted_rel))%>%
ggplot(aes(x=y, y=x,fill=Intercepted_rel,col=Intercepted_rel))+
geom_tile()+
geom_point(aes(x=y_tree_1,y=x_tree_1),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_2,y=x_tree_2),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_3,y=x_tree_3),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_4,y=x_tree_4),pch=8,col='forestgreen',size=3)+
ylim(low= 0, high= lim)+
xlim(low= 0, high=lim)+
labs(x = 'Intra row distance (m)', y = 'Inter row distance (m)',fill= expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)')) +
scale_fill_viridis(option = 'plasma',limits = c(0, 100))+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
ggtitle(paste(design_name,' -',orientation),
paste(paramFileName,' density:',density,'palms ha-1'))+
coord_equal()+
myTheme
}
if (designType %in% c('quincunx5')){
plot=grid_fin%>%
mutate(Intercepted_rel=ifelse(Intercepted_rel>100,100,Intercepted_rel))%>%
ggplot(aes(x=y, y=x,fill=Intercepted_rel,col=Intercepted_rel))+
geom_tile()+
geom_point(aes(x=y_tree_1,y=x_tree_1),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_2,y=x_tree_2),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_3,y=x_tree_3),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_4,y=x_tree_4),pch=8,col='forestgreen',size=3)+
geom_point(aes(x=y_tree_5,y=x_tree_5),pch=8,col='forestgreen',size=3)+
ylim(low= 0, high= lim)+
xlim(low= 0, high=lim)+
labs(x = 'Intra row distance (m)', y = 'Inter row distance (m)',fill= expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)')) +
scale_fill_viridis(option = 'plasma',limits = c(0, 100))+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
ggtitle(paste(design_name,' -',orientation),
paste(paramFileName,' density:',density,'palms ha-1'))+
coord_equal()+
myTheme
}
}
if (designType %in% c('quincunx','quincunx2','square','square2')){
plot2=grid_fin%>%
group_by(x)%>%
summarize(Intercepted_rel=mean(Intercepted_rel),
x_tree_1=mean(x_tree_1),
x_tree_2=mean(x_tree_2))%>%
ungroup()%>%
ggplot(aes(x=x, y=Intercepted_rel,col=Intercepted_rel))+
geom_line()+
geom_vline(aes(xintercept = x_tree_1),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_2),col='forestgreen')+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
xlim(low= 0, high=min(c(max(grid_fin$y),max(grid_fin$x))))+
# ggtitle(paste("Inter row:",d_inter,'m','- Intra row:',d_intra,'m -',orientation),
#         paste('density:',density,'palms ha-1'))+
labs(x = 'x (m)', y =  expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)'))
}
if (designType %in% c('quincunx3')){
plot2=grid_fin%>%
group_by(x)%>%
summarize(Intercepted_rel=mean(Intercepted_rel),
x_tree_1=mean(x_tree_1),
x_tree_2=mean(x_tree_2),
x_tree_3=mean(x_tree_3))%>%
ungroup()%>%
ggplot(aes(x=x, y=Intercepted_rel,col=Intercepted_rel))+
geom_line()+
geom_vline(aes(xintercept = x_tree_1),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_2),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_3),col='forestgreen')+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
xlim(low= 0, high=min(c(max(grid_fin$y),max(grid_fin$x))))+
# ggtitle(paste("Inter row:",d_inter,'m','- Intra row:',d_intra,'m -',orientation),
#         paste('density:',density,'palms ha-1'))+
labs(x = 'x (m)', y =  expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)'))
}
if (designType %in% c('quincunx4')){
plot2=grid_fin%>%
group_by(x)%>%
summarize(Intercepted_rel=mean(Intercepted_rel),
x_tree_1=mean(x_tree_1),
x_tree_2=mean(x_tree_2),
x_tree_3=mean(x_tree_3),
x_tree_4=mean(x_tree_4))%>%
ungroup()%>%
ggplot(aes(x=x, y=Intercepted_rel,col=Intercepted_rel))+
geom_line()+
geom_vline(aes(xintercept = x_tree_1),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_2),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_3),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_4),col='forestgreen')+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
xlim(low= 0, high=min(c(max(grid_fin$y),max(grid_fin$x))))+
# ggtitle(paste("Inter row:",d_inter,'m','- Intra row:',d_intra,'m -',orientation),
#         paste('density:',density,'palms ha-1'))+
labs(x = 'x (m)', y =  expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)'))
}
if (designType %in% c('quincunx5')){
plot2=grid_fin%>%
group_by(x)%>%
summarize(Intercepted_rel=mean(Intercepted_rel),
x_tree_1=mean(x_tree_1),
x_tree_2=mean(x_tree_2),
x_tree_3=mean(x_tree_3),
x_tree_4=mean(x_tree_4),
x_tree_5=mean(x_tree_5))%>%
ungroup()%>%
ggplot(aes(x=x, y=Intercepted_rel,col=Intercepted_rel))+
geom_line()+
geom_vline(aes(xintercept = x_tree_1),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_2),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_3),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_4),col='forestgreen')+
geom_vline(aes(xintercept = x_tree_5),col='forestgreen')+
scale_color_viridis(option = 'plasma',limits = c(0, 100))+
xlim(low= 0, high=min(c(max(grid_fin$y),max(grid_fin$x))))+
# ggtitle(paste("Inter row:",d_inter,'m','- Intra row:',d_intra,'m -',orientation),
#         paste('density:',density,'palms ha-1'))+
labs(x = 'x (m)', y =  expression ('Transmitted light (%)'),col=expression ('Transmitted light (%)'))
}
im=readPNG("north.png")
visu=ggdraw() +
draw_plot(plot) +
draw_image(im,x = 0.4,y = 0.4,scale=0.1)
visu
source('./1-code/helpers.R')
source('./1-code/Generate_designs.R')
source('1-code/Mapping_light.R')
path_designs='2-outputs/Run_simu/planting_designs/'
MAP=180
paramFileName=paste0('Mockup_seed1_MAP_',MAP)
##### Simple quincunx design
l=9
h=round(sqrt(3*(l**2)/4),1)
designType='quincunx'
a1=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = designType,orientation = 'NS',pointSize = 3)$plot
a2=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = 'quincunx',orientation = "EW",pointSize = 3)$plot
m2=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="EW" )
plot_grid(a1,a2,ncol=2)
m2$plot
plot_grid(a1,a2,m2$plot,m2$plot,ncol=2)
##### Simple quincunx design
l=9
h=round(sqrt(3*(l**2)/4),1)
designType='quincunx'
a1=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = designType,orientation = 'NS',pointSize = 3)$plot
# m1=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="NS" )
a2=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = 'quincunx',orientation = "EW",pointSize = 3)$plot
m2=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="EW" )
plot_grid(a1,a2,ncol=2)
plot_grid(m2$plot,m2$plot,ncol=2)
source('./1-code/helpers.R')
source('./1-code/Generate_designs.R')
source('1-code/Mapping_light.R')
path_designs='2-outputs/Run_simu/planting_designs/'
MAP=180
paramFileName=paste0('Mockup_seed1_MAP_',MAP)
##### Simple quincunx design
l=9
h=round(sqrt(3*(l**2)/4),1)
designType='quincunx'
a1=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = designType,orientation = 'NS',pointSize = 3)$plot
# m1=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="NS" )
a2=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = 'quincunx',orientation = "EW",pointSize = 3)$plot
m2=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="EW" )
plot_grid(a1,a2,ncol=2)
plot_grid(m2$plot,m2$plot,ncol=2)
source('./1-code/helpers.R')
source('./1-code/Generate_designs.R')
source('1-code/Mapping_light.R')
path_designs='2-outputs/Run_simu/planting_designs/'
MAP=180
paramFileName=paste0('Mockup_seed1_MAP_',MAP)
##### Simple quincunx design
l=9
h=round(sqrt(3*(l**2)/4),1)
designType='quincunx'
a1=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = designType,orientation = 'NS',pointSize = 3,lim=50)$plot
# m1=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="NS" )
a2=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = 'quincunx',orientation = "EW",pointSize = 3)$plot
m2=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="EW" )
plot_grid(a1,a2,ncol=2)
plot_grid(m2$plot,m2$plot,ncol=2)
source('./1-code/helpers.R')
source('./1-code/Generate_designs.R')
source('1-code/Mapping_light.R')
path_designs='2-outputs/Run_simu/planting_designs/'
MAP=180
paramFileName=paste0('Mockup_seed1_MAP_',MAP)
##### Simple quincunx design
l=9
h=round(sqrt(3*(l**2)/4),1)
designType='quincunx'
a1=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = designType,orientation = 'NS',pointSize = 3,lim=50)$plot
# m1=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="NS" )
a2=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = 'quincunx',orientation = "EW",pointSize = 3)$plot
m2=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="EW" )
plot_grid(a1,a2,ncol=2)
plot_grid(m2$plot,m2$plot,ncol=2)
##### Simple quincunx design
l=9
h=round(sqrt(3*(l**2)/4),1)
designType='quincunx'
a1=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = designType,orientation = 'NS',pointSize = 3)$plot
# m1=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="NS" )
a2=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = 'quincunx',orientation = "EW",pointSize = 3)$plot
m2=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="EW" )
plot_grid(a1,a2,ncol=2)
plot_grid(m2$plot,m2$plot,ncol=2)
# Load packages -----------------------------------------------------------
# install.packages("devtools")
# devtools::install_github("VEZY/Vpalmr")
packs <- c("lubridate", "stringr", 'tidyverse','viridis','Vpalmr','data.table','yaml')
InstIfNec<-function (pack) {
if (!do.call(require,as.list(pack))) {
do.call(install.packages,as.list(pack))  }
do.call(require,as.list(pack)) }
lapply(packs, InstIfNec)
source('./1-code/helpers.R')
source('./1-code/Generate_designs.R')
source('./1-code/Mapping_light.R')
# inputs ------------------------------------------------------------------
MAP=180
l=9
h=7.8
dist_intra=l
dist_intercrop=NULL
dist_inter=h
designType='quincunx'
path_designs='./2-outputs/Run_simu/planting_designs/'
pathVpalmParam='./2-outputs/Generate_VPalm_param/'
pathArchimed='./1-code/archimed-phys.jar'
pathVpalmJar='./1-code/vpalm_biomech.jar'
pathOpf='./2-outputs/Run_simu/ops/opf/'
pathOPS='./2-outputs/Run_simu/ops/'
opfStepExport=6
orientation='NS'
replanting=T
designType='quincunx'
### check design
generate_design(dist_intra = dist_intra,dist_inter = dist_inter,dist_intercrop =dist_intercrop ,designType =designType ,orientation = orientation,pointSize = 3,replanting = T)$plot
RunSimu(d_inter=dist_inter,d_intra=dist_intra,d_intercrop =dist_intercrop,designType =designType,  MAP=MAP,pathVpalmParam=pathVpalmParam,pathArchimed=pathArchimed,path_designs=path_designs,pathVpalmJar=pathVpalmJar,pathOpf=pathOpf,pathOPS=pathOPS,run_photosynthesis=T,opfStepExport=opfStepExport,overwrite =T,orientation=orientation)
source('./1-code/helpers.R')
source('./1-code/Generate_designs.R')
source('1-code/Mapping_light.R')
path_designs='2-outputs/Run_simu/planting_designs/'
MAP=180
paramFileName=paste0('Mockup_seed1_MAP_',MAP)
##### Simple quincunx design
l=9
h=round(sqrt(3*(l**2)/4),1)
designType='quincunx'
a1=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = designType,orientation = 'NS',pointSize = 3)$plot
m1=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="NS" )
a2=generate_design(dist_intra = l,dist_inter = h,dist_intercrop = NULL,designType = 'quincunx',orientation = "EW",pointSize = 3)$plot
m2=Create_map(designType =designType ,d_inter =h,d_intra = l,d_intercrop = NULL,path_designs =path_designs,paramFileName =  paramFileName,orientation ="EW" )
plot_grid(a1,a2,ncol=2)
plot_grid(m1$plot,m2$plot,ncol=2)
